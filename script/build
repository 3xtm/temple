#!/bin/bash
#
# Builds one (or more executable).
#
# Usage:
#   Just your native executable:
#      ./script/build
#   All cross compile platforms:
#      ./script/build all

set -euo pipefail
source "$(dirname "$0")/utilities.bash"
progname="temple"

osarch="${1:-native}"
export CGO_ENABLED=0 # Force static compiling

function dogox()
{
  gox \
    -ldflags "-s -w" \
    -osarch="$*" \
    -output="${progname}_{{.OS}}_{{.Arch}}"
}

if [[ "$osarch" == *all* ]]; then
  osarches=(
    darwin/amd64

    linux/386
    linux/amd64
    linux/arm
    linux/ppc64le

    windows/386
    windows/amd64

    freebsd/arm
    freebsd/386
    freebsd/amd64

    netbsd/arm
    netbsd/386
    netbsd/amd64
  )

  header "Building all binaries"
  gox \
    -osarch="${osarches[*]}" \
    -output='temple_{{.OS}}_{{.Arch}}'
else
  header "Building native binary"
  go build \
    -v \
    -ldflags "-s -w" \
    -o "$progname" \
    ./*.go
fi

# vim: set ft=sh :
